@model EmployeeLeaveRequestViewVM

@{
    ViewData["Title"] = "My Leave";
}

<div class="card">
    <div class="card-header">
        <h3>Leave Allocations</h3>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item">
            <div class="row">
                <div class="col"> Leave Name</div>
                <div class="col"> Original Days</div>
                <div class="col"> Current Allocation</div>
            </div>
        </li>
        @foreach (var allocation in Model.LeaveAllocations)
        {
            <li class="list-group-item">
                <div class="row">
                    <div class="col"> <h6>@allocation.LeaveType.Name</h6> </div>
                    <div class="col"> <button type="button" class="btn btn-primary"> Allocated Days <span class="badge bg-secondary">@allocation.LeaveType.DefaultDays</span></button></div>
                    <div class="col"> <button type="button" class="btn btn-primary"> Remaining Days <span class="badge bg-secondary">@allocation.NumberOfDays</span></button></div>
                </div>
            </li>
        }
    </ul>
</div>
<hr />

<h2>Approved Requests</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].EndDate)
            </th>
            <th>
                Number of Days
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].LeaveType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].DateRequested)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].Approved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].Cancelled)
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.LeaveRequests)
        {
            @if (item.Approved == true)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @(((TimeSpan)(item.EndDate - item.StartDate)!).TotalDays.ToString("0"))
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.LeaveType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateRequested)
                    </td>
                    <td>
                        @if (item.Cancelled)
                        {
                            <span class="badge bg-secondary" style=" font-size: 1.1rem;"> Cancelled</span>
                        }
                        else if (item.Approved == null)
                        {
                            <span class="badge bg-warning" style="font-size: 1.1rem;">Pending</span>
                        }
                        else if (item.Approved.Value == true)
                        {
                            <span class="badge bg-success" style=" font-size: 1.1rem;">Approved</span>
                        }
                        else if (item.Approved.Value == false)
                        {
                            <span class="badge bg-danger" style=" font-size: 1.1rem;">Rejected</span>
                        }
                </td>
                <td>
                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id" style="font-size: 1.0rem;">Cancel Request</a>
                </td>
            </tr>
            }
        }
    </tbody>
</table>
<hr />

<h2>Pending Requests</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].EndDate)
            </th>
            <th>
               Number of Days
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].LeaveType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].DateRequested)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].Approved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveRequests[0].Cancelled)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.LeaveRequests)
        {
            @if (item != null && item.Approved == null && item.Cancelled != true)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @(((TimeSpan)(item.EndDate - item.StartDate)!).TotalDays.ToString("0"))
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.LeaveType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateRequested)
                    </td>
                    <td>
                        @if (item.Cancelled)
                        {
                            <span class="badge bg-secondary" style="font-size: 1.1rem;"> Cancelled</span>
                        }
                        else if (item.Approved == null)
                        {
                            <span class="badge bg-warning" style="font-size: 1.1rem;">Pending</span>
                        }
                        else if (item.Approved.Value == true)
                        {
                            <span class="badge bg-success" style="font-size: 1.1rem;">Approved</span>
                        }
                        else if (item.Approved.Value == false)
                        {
                            <span class="badge bg-danger" style="font-size: 1.1rem;">Rejected</span>
                        }
                </td>
                <td>
                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id" style="font-size: 1.0rem;">Cancel Request</a>
                </td>
            </tr>
            }
        }
    </tbody>
</table>
